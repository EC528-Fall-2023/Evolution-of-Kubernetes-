import subprocess
import os
import csv
import sys

# Run the grype command with the parsed image name.
def run_grype(image_name: str, spdxID: str, dir: str):
    
    command = [
        "grype",
        image_name,
        "--add-cpes-if-none",
        "--by-cve",
        "--scope", "all-layers",
        "-o", "table",
        "-q"
    ]
    output_directory = dir + "/grype_syft_output/"
    output_file = spdxID + '_grype_output.txt'

    if os.path.exists(output_directory + output_file):
        print(output_directory + output_file + " already exists")
        return
    
    print("writing to " + output_directory + output_file)
    subprocess.run(command, stdout=open(output_directory + output_file, 'w+'), stderr=subprocess.STDOUT)

    # Remove the image after scanning.
    try:
        remove_image_command = [ "docker", "rmi", image_name ]
        subprocess.run(remove_image_command)
    except Exception as e:
        print(e)


#  Run the syft command with the parsed image name.
def run_syft(image_name: str, spdxID: str, dir: str):

    command = [
        "syft",
        image_name,
        "--scope", "all-layers",
        "-o", "syft-table",
        "-q",
    ]
    output_directory = dir + "/grype_syft_output/"
    output_file =  spdxID + '_syft_output.txt'

    # subprocess.run(command)
    if os.path.exists(output_directory + output_file):
        print(output_directory + output_file + " already exists")
        return
    
    print("writing to " + output_directory + output_file)
    subprocess.run(command, stdout=open(output_directory + output_file, 'w+'), stderr=subprocess.STDOUT)

def filter_image_name(name: str):
    name = name.replace("SPDXRef-Package-k8s.gcr.io-", "k8s.gcr.io/")
    name = name.replace("SPDXRef-Package-registry.k8s.io-", "registry.k8s.io/")
    name = name.replace("SPDXREF-Package-k8sgcrio", "k8s.gcr.io/")    
    name = name.replace("-v",":v")

    return name

def process_csv(filename: str, dir: str):
    with open(filename, mode='r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            if "k8s.gcr.io/" in row['PackageName'] :
                run_syft(row["PackageName"], row['SPDXID'], dir)
                run_grype(row["PackageName"], row['SPDXID'], dir)
            elif ".tar" in row['PackageName'] and ".tar" not in row['SPDXID'] and "-sha256-" not in row['SPDXID']:
                run_syft(filter_image_name(row['SPDXID']), row['SPDXID'], dir)
                run_grype(filter_image_name(row['SPDXID']), row['SPDXID'], dir)
    
if __name__ == "__main__":
    current_directory = os.getcwd()

    entries = sorted(os.listdir(current_directory), key=str.lower)
    length = len(entries)

    index = int(input("Enter index to start scanning (1 to 4): "))

    for dir in entries[int((index - 1) * length / 4) : int(index * length / 4)]:
        print("scanning", dir)
        try:
            os.mkdir(dir + "/grype_syft_output")
        except Exception as e:
            print(e)
        process_csv(dir + "/" + dir + "_packages_output.csv", dir)

import subprocess
import os
import csv
import sys

# Run the grype command with the parsed image name.
def run_grype(image_name: str, spdxID: str, dir: str):
    
    command = [
        "grype",
        image_name,
        "--add-cpes-if-none",
        "--by-cve",
        "--scope", "all-layers",
        "-o", "grype-table",
        "-q"
    ]
    output_directory = dir + "/grype_syft_output/"
    output_file = + spdxID + '_grype_output.txt'

    subprocess.run(command)
    with open(output_directory + output_file, 'w+') as file:
        print("writing to " + output_directory + output_file)
        process = subprocess.Popen(
            command,
            stdout=file,
            stderr=subprocess.STDOUT,
            shell=True
        )
        process.communicate()

#  Run the syft command with the parsed image name.
def run_syft(image_name: str, spdxID: str, dir: str):

    command = [
        "syft",
        image_name,
        "--scope", "all-layers",
        "-o", "syft-table",
        "-q",
    ]
    output_directory = dir + "/grype_syft_output/"
    output_file =  spdxID + '_syft_output.txt'

    subprocess.run(command)
    with open(output_directory + output_file, 'w+') as file:
        print("writing to " + output_directory + output_file)
        process = subprocess.Popen(
            command,
            stdout=file,
            stderr=subprocess.STDOUT,
            shell=True
        )
        process.communicate()


def filter_image_name(name: str):
    name = name.replace("SPDXRef-Package-k8s.gcr.io-", "k8s.gcr.io/")
    name = name.replace("SPDXRef-Package-registry.k8s.io-", "registry.k8s.io/")
    name = name.replace("SPDXREF-Package-k8sgcrio", "k8s.gcr.io/")    
    name = name.replace("-v",":v")

    return name

def process_csv(filename: str, dir: str):
    with open(filename, mode='r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            try:
                if "k8s.gcr.io/" in row['PackageName'] :
                    run_syft(row["PackageName"], row['SPDXID'], dir)

                elif ".tar" in row['PackageName'] and ".tar" not in row['SPDXID'] and "-sha256-" not in row['SPDXID']:
                    run_syft(filter_image_name(row['SPDXID']), row['SPDXID'], dir)
            except Exception as e:
                print(e)
                continue
    
if __name__ == "__main__":
    # if len(sys.argv) != 2:
    #     print("Usage: python script_name.py your_file.csv")
    #     sys.exit(1)
    
    # filename = sys.argv[1]
    # process_csv(filename)

    # Get the current directory
    current_directory = os.getcwd()

    # List all entries in the directory
    entries = sorted(os.listdir(current_directory), key=str.lower)

    for dir in entries:
        print("scanning", dir)
        if os.path.exists(dir + "/grype_syft_output/"):
            print("already scanned", dir + "/grype_syft_output")
            continue
        os.mkdir(dir + "/grype_syft_output")
        process_csv(dir + "/" + dir + "_packages_output.csv", dir)